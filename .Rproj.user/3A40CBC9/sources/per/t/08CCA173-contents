#Trabajo 04: R para Análisis Estadístico

#Regresión Lineal

#Parte 1

#Preparación de datos

#1. Librerías a utilizar

pacman::p_load(dplyr, 
               car, 
               sjmisc, 
               sjPlot, 
               sjlabelled, 
               stargazer, 
               kableExtra, 
               corrplot, 
               texreg, 
               ggplot2, 
               ggpubr,
               summarytools,
               fastDummies, 
               ggeffects)

rm(list=ls())       
options(scipen=999)

#2. Carga de la base de datos

#VARIABLE 1:"cod_depe2" = Código de dependencia 3 categorías (Municipal(0); Particular subvencionado(1); Particular pagado(2))

#VARIABLE 2: "cod_grupo" = Código de grupo socioeconómico (Bajo(0);Medio bajo(1);Medio(2);Medio alto(3);Alto(4))

#VARIABLE 3: "cdm_2017" = Categoría de Desempeño 2017 (INSUFICIENTE(0), MEDIO-BAJO(1), MEDIO(2) Y ALTO(3))
# Los establecimientos que tengan valores del Índice Final hasta el valor del percentil 12 (inclusive) de la distribución de este índice se clasificarán en la categoría Desempeño Insuficiente.
# Los establecimientos que presenten valores del Índice Final por sobre el valor del percentil 12 y hasta el percentil 35 (inclusive) se clasificarán en la categoría Desempeño Medio-Bajo.
# Los establecimientos que se sitúen por sobre el valor del percentil 35 y hasta el percentil 85 (inclusive) de la distribución del índice Final se clasificarán en la categoría Desempeño Medio.
# Los establecimientos con valores del Índice Final superiores al valor del percentil 85 de la distribución de este índice se clasificarán en la categoría Desempeño Alto.

load("~/Universidad/UAH 5° Semestre/OFC R para análisis estadístico/Trabajos/input/data-proc/simce2m2017_finalnum.RData")

dim(simce2m2017_finalnum)
frq(simce2m2017_finalnum)

#Recodificar la variable "cod_grupo" (Bajo, Medio, Alto) para reducir categorías

simce2m2017_finalnum$cod_grupo <- car::recode(simce2m2017_finalnum$cod_grupo, "c(0,1)=0; c(2)=1; c(3,4)=2")

simce2m2017_finalnum$cod_grupo <- set_labels(simce2m2017_finalnum$cod_grupo,
                                             labels=c( "Bajo"=0,
                                                       "Medio"=1,
                                                       "Alto"=2))

frq(simce2m2017_finalnum$cod_grupo)

#Variables categóricas como variables categóricas con "as_factor".

simce2m2017_finalnum$cod_grupo <- as_factor(simce2m2017_finalnum$cod_grupo)
simce2m2017_finalnum$cod_depe2 <- as_factor(simce2m2017_finalnum$cod_depe2)

frq(simce2m2017_finalnum)

#Regresiones

reg1 <- lm(cdm_2017 ~ 1, data=simce2m2017_finalnum)

stargazer(reg1, type="text")

#Intercepto es: 1.675*** (0.017)

#Regresion lineal simple

reg2 <- lm(cdm_2017 ~ cod_depe2, data=simce2m2017_finalnum)
reg3 <- lm(cdm_2017 ~ cod_grupo, data=simce2m2017_finalnum)

knitreg(list(reg2, reg3), 
        custom.model.names = c("Modelo 1",
                               "Modelo 2"),
        custom.note = "*** p < 0.001; ** p < 0.01; * p < 0.05",
        custom.coef.names = c("Intercepto", 
                              "Dependencia: Particular subvencionado <br> <i>(Ref. Dep.: Municipal)</i>",
                              "Dependencia: Particular pagado", 
                              "GSE: Medio <br> <i>(Ref. GSE: Bajo)</i>",
                              "GSE: Alto"),
        caption = "Desempeño del Establecimiento",
        caption.above = TRUE)

#Gráficos

plot_model(reg2, 
           title = "", 
           show.values = TRUE, 
           dot.size = 3, 
           line.size = 1, 
           value.size = 4, 
           spacing = 1, 
           vline.color = "red", 
           axis.labels = c("Municipal", 
                           "Particular subvencionado", 
                           "Particular pagado"), 
           show.legend = FALSE) + 
  theme_bw()

plot_model(reg3, 
           title = "", 
           show.values = TRUE, 
           dot.size = 3, 
           line.size = 1, 
           value.size = 4, 
           spacing = 1, 
           vline.color = "blue", 
           axis.labels = c("Bajo", 
                           "Medio", 
                           "Alto"), 
           show.legend = FALSE) + 
  theme_bw()

#Cálculo de valores predichos

#reg2

reg2 <- lm(cdm_2017 ~ cod_depe2, data=simce2m2017_finalnum)
knitreg(list(reg2), 
        custom.model.names = c("Modelo 1"),
        custom.coef.names = c("Intercepto", 
                              "Dependencia: Particular subvencionado <br> <i>(Ref. Dep.: Municipal)</i>",
                              "Dependencia: Particular pagado"))

ggeffects::ggpredict(reg2, terms = c("cod_depe2")) %>%
  ggplot(aes(x=x, y=predicted)) +
  geom_bar(stat="identity", color="grey", fill="grey")+
  geom_errorbar(aes(ymin = conf.low, ymax = conf.high), width=.1) +
  labs(title="Código de Dependencia", x = "", y = "") +
  theme_bw() +
  scale_x_discrete(name = "",
                   labels = c("Municipal", 
                              "Particular subvencionado", 
                              "Particular pagado")) +
  scale_y_continuous(limits = c(0,16), 
                     breaks = seq(0,16, by = 1))

#reg3 --------------------------------------------------------------------------

reg3 <- lm(cdm_2017 ~ cod_grupo, data=simce2m2017_finalnum)
knitreg(list(reg3), 
        custom.model.names = c("Modelo 2"),
        custom.coef.names = c("Intercepto", 
                              "GSE: Medio <br> <i>(Ref. GSE: Bajo)</i>",
                              "GSE: Alto"))

ggeffects::ggpredict(reg3, terms = c("cod_grupo")) %>%
  ggplot(aes(x=x, y=predicted)) +
  geom_bar(stat="identity", color="pink", fill="pink")+
  geom_errorbar(aes(ymin = conf.low, ymax = conf.high), width=.1) +
  labs(title="GSE", x = "", y = "") +
  theme_bw() +
  scale_x_discrete(name = "",
                   labels = c("Bajo", 
                              "Medio", 
                              "Alto")) +
  scale_y_continuous(limits = c(0,16), 
                     breaks = seq(0,16, by = 1))
































































































































































































